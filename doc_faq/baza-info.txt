--------------------------------------------
nazwa bazy: las
użytkownik stworzony do obsługi bazy: las
hasło dla użytkownika las: tajnehaslo
--------------------------------------------

Tabela users:
CREATE TABLE users ( user_id int AUTO_INCREMENT, user_name varchar(255) NOT NULL, hashed_password varchar(60) NOT NULL, user_email varchar(255) UNIQUE NOT NULL, PRIMARY KEY(user_id) );

Tabela tweet:
CREATE TABLE tweet (tweet_id int NOT NULL AUTO_INCREMENT, tweet_user_id int NOT NULL,
tweet_text varchar(250) NOT NULL, tweet_date date, PRIMARY KEY(tweet_id),
FOREIGN KEY(tweet_user_id) REFERENCES users(user_id) );  
-Zmiana: ALTER TABLE `tweet` CHANGE `tweet_date` `tweet_date` DATETIME NULL DEFAULT NULL;
-Zmiana2: ALTER TABLE `tweet` DROP FOREIGN KEY `tweet_ibfk_1`; ALTER TABLE `tweet` ADD CONSTRAINT `tweet_ibfk_1` FOREIGN KEY (`tweet_user_id`) REFERENCES `users`(`user_id`) ON DELETE CASCADE ON UPDATE CASCADE;

Tabela comment:
CREATE TABLE comment (comment_id int NOT NULL AUTO_INCREMENT,
comment_user_id int NOT NULL,
comment_tweet_id int NOT NULL,
comment_creation_date DATETIME,
comment_text varchar(80) NOT NULL,
PRIMARY KEY(comment_id),
FOREIGN KEY(comment_user_id) REFERENCES users(user_id) ON DELETE CASCADE,    
FOREIGN KEY(comment_tweet_id) REFERENCES tweet(tweet_id) ON DELETE CASCADE);

Tabela message:
CREATE TABLE message (message_id int NOT NULL AUTO_INCREMENT,
message_read int NOT NULL,
message_sender_id int NOT NULL,
message_receiver_id int NOT NULL,
message_content text,
message_creation_date DATETIME NOT NULL,
message_sender_visible int NOT NULL,
message_receiver_visible int NOT NULL,
PRIMARY KEY(message_id),
FOREIGN KEY(message_sender_id) REFERENCES users(user_id) ON DELETE CASCADE, 
FOREIGN KEY(message_receiver_id) REFERENCES users(user_id) ON DELETE CASCADE);
- message_read int NOT NULL, -0 wiadomość nieprzeczytana -1 wiadomość przeczytana
- message_s/r_visible -0 wiadomość nieskasowana -1 wiadomość skasowana przed nadawcę/odbiorcę (if 1 i 1 -> del message)





















